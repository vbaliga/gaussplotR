% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_gaussian_2D.R
\name{fit_gaussian_2D}
\alias{fit_gaussian_2D}
\title{Determine the best-fit parameters of a 2D Gaussian fit to a data set}
\usage{
fit_gaussian_2D(
  data,
  user_init = NULL,
  Q_strategy = "unconstrained",
  verbose = FALSE,
  ...
)
}
\arguments{
\item{data}{A data.frame or tibble that contains the raw data. Columns must
have "X_values", "Y_values" and "response" as column names.}

\item{user_init}{Default NULL; if desired, the user can supply initial values
for the A, X_peak, Y_peak, X_var, and Y_var parameters. See Details for more.}

\item{Q_strategy}{Should the "Q" parameter of the model be constrained? See
Details for more.}

\item{verbose}{TRUE or FALSE; should the trace of the iteration be
printed? See the \code{trace} argument of \code{stats::nls()} for more
detail.}

\item{...}{Additional arguments passed to \code{stats::nls()}}
}
\value{
A vector that provides the best-fitting values of A (amplitude),
Q (orientation parameter), X_peak (x-axis peak location), Y_peak (y-axis
peak location), X_var (spread along x-axis), and Y_var (spread along y-axis).
}
\description{
Determine the best-fit parameters of a 2D Gaussian fit to a data set
}
\details{
\code{stats::nls()} is used to fit parameters for a 2D Gaussian to
the supplied data. Such parameters include A (amplitude),
Q (orientation parameter), X_peak (x-axis peak location), Y_peak (y-axis
peak location), X_var (spread along x-axis), and Y_var (spread along y-axis).

The Q parameter determines the orientation of the 2D Gaussian. In most cases,
the user should use the default "unconstrained" setting for this argument.
Doing so will provide the best-fit 2D Gaussian (assuming that the solution
yielded by \code{stats::nls()} converges on the global optimum). By choosing
to supply numeric values to the \code{Q_strategy} argument, the user can
dictate the orientation of the 2D Gaussian. Setting \code{Q_strategy = 0}
will result in a diagonally-oriented Gaussian, whereas setting
\code{Q_strategy = -1} will result in horizontal orientation.

The \code{user_init} argument can also be used to supply a
vector of initial values for the A, Q, X_peak, Y_peak, X_var, and Y_var
parameters. If the user chooses to make use of \code{user_init}, then a
vector containing all 6 parameters must be supplied in that particular order.
Additional arguments (e.g. \code{control}) can be supplied to
\code{stats::nls()} via \code{...}.
}
\examples{
if (interactive()) {
  ## Load the sample data set
  data(gaussplot_sample_data)

  ## Generate a grid of x- and y- values on which to predict
  grid <-
    expand.grid(X_values = seq(from = -5, to = 0, by = 0.1),
                Y_values = seq(from = -1, to = 4, by = 0.1))

  ## Predict the values using predict_gaussian_2D
  gauss_data <-
    predict_gaussian_2D(
      X_values = grid$X_values,
      Y_values = grid$Y_values,
      A = gaussplot_sample_data$A[1],
      X_peak = gaussplot_sample_data$X_peak[1],
      Y_peak = gaussplot_sample_data$Y_peak[1],
      Q = gaussplot_sample_data$Q[1],
      X_var = gaussplot_sample_data$X_var[1],
      Y_var = gaussplot_sample_data$Y_var[1]
    )

  ## Plot via ggplot2 and metR
  library(ggplot2); library(metR)
  ggplot_gaussian_2D(gauss_data)
 }
}
\author{
Vikram B. Baliga
}
